#Format DateTime: -- tmpDateFormat defined above, timezone set to CST (America/Chicago)
big_South$TIMESTAMP <- as.POSIXct(big_South$TIMESTAMP, format = tmpDateFormat, tz = "America/Chicago")
#create rows for missing values:
datetimes <- seq(min(big_South$TIMESTAMP, na.rm = T), max(big_South$TIMESTAMP, na.rm = T), by = "30 min")
DT <- as.data.frame(datetimes)
big_South <- merge(big_South, DT, by.x = "TIMESTAMP", by.y = "datetimes", all.x = T, all.y = T)
#round air temp column to nearest 0.1
big_South$AirTC <-round(big_South$AirTC_Avg, 1)
#round air temp column to nearest 0.1
big_South$AirT <-round(big_South$AirT, 1)
#round RH column to nearest 1%
big_South$RH <- round(big_South$RH, 0)
## QAQC ###
#Relative Humidity should be on the range [0, 100]
big_South["RH"] <- lapply(big_South["RH"], function(x) replace(x, x < 0 | x > 100, NA))
#Air Temperature Missing Values
big_South["AirTC"] <- lapply(big_South["AirTC"], function(x) replace(x, x < -50 | x > 50, NA))
## QAQC ###
#Relative Humidity should be on the range [0, 100]
big_South["RH"] <- lapply(big_South["RH"], function(x) replace(x, x < 0 | x > 100, NA))
#Air Temperature Missing Values
big_South["AirT"] <- lapply(big_South["AirT"], function(x) replace(x, x < -50 | x > 50, NA))
##Air Temperature Remove outliers
out <- testRange(big_South$AirT, 2000, 4)
big_South$AirT[out] <- NA
summary(big_South)
str(big_South)
#Air Temperature Plots
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "BLF",
col = alpha(rgb(0,0,0), 0.5))
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('red', 0.5),
xlab = "Time", ylab = "NADP")
plot(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('blue', 0.5),
xlab = "Time", ylab = "S2 Forest")
#remove timestamps before 2020
big_South <- big_South[big_South$TIMESTAMP > '2020-01-01 00:00:00']
#remove timestamps before 2020
big_South[big_South$TIMESTAMP < '2020-01-01 00:00:00'] <- NA
head(big_South)
#remove timestamps before 2020
big_South <- big_South[big_South$TIMESTAMP < '2020-01-01 00:00:00']
head(big_South,20)
#remove timestamps before 2020
big_South <- big_South[big_South$TIMESTAMP < '2020-01-01 00:00:00', ]
summary(big_South)
#remove timestamps before 2020
big_South <- big_South[big_South$TIMESTAMP > '2020-01-01 00:00:00', ]
big_South <- readCDL('Data and Codes/Raw Data/ATM/South_Wx_SouthMet.dat')
##CODE FOR PICKING OUT UNMATCHED NAMES
#nameTemp = colnames(weekly_downloads[[1]])
#for(i in 1:length(weekly_downloads)){
#  new = colnames(weekly_downloads[[i]])
#  if(!identical(new, nameTemp)){
#    print("-----")
#    print(i)
#    print(file_list[i])
#  }}
### CLEANING ###
#Check if timestamps are unique
uniq = length(unique(big_South$TIMESTAMP)) == nrow(big_South)
#Remove duplicated rows
if(!uniq){
big_South = big_South[!duplicated(big_South),]
}
#Format DateTime: -- tmpDateFormat defined above, timezone set to CST (America/Chicago)
big_South$TIMESTAMP <- as.POSIXct(big_South$TIMESTAMP, format = tmpDateFormat, tz = "America/Chicago")
#create rows for missing values:
datetimes <- seq(min(big_South$TIMESTAMP, na.rm = T), max(big_South$TIMESTAMP, na.rm = T), by = "30 min")
DT <- as.data.frame(datetimes)
big_South <- merge(big_South, DT, by.x = "TIMESTAMP", by.y = "datetimes", all.x = T, all.y = T)
#round air temp column to nearest 0.1
big_South$AirT <-round(big_South$AirT, 1)
#round RH column to nearest 1%
big_South$RH <- round(big_South$RH, 0)
#remove timestamps before 2020
big_South <- big_South[big_South$TIMESTAMP > '2020-01-01 00:00:00', ]
## QAQC ###
#Relative Humidity should be on the range [0, 100]
big_South["RH"] <- lapply(big_South["RH"], function(x) replace(x, x < 0 | x > 100, NA))
#Air Temperature Missing Values
big_South["AirT"] <- lapply(big_South["AirT"], function(x) replace(x, x < -50 | x > 50, NA))
##Air Temperature Remove outliers
out <- testRange(big_South$AirT, 2000, 4)
big_South$AirT[out] <- NA
summary(big_South)
str(big_South)
#Air Temperature Plots
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "BLF",
col = alpha(rgb(0,0,0), 0.5))
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('red', 0.5),
xlab = "Time", ylab = "NADP")
plot(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('blue', 0.5),
xlab = "Time", ylab = "S2 Forest")
#Air Temperature Plots
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = c('2022-09-01 00:00:00', '2023-07-31 00:00:00'),
col = alpha(rgb(0,0,0), 0.5))
xl = as.Date(c('2022-09-01 00:00:00', '2023-07-31 00:00:00'))
#Air Temperature Plots
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha(rgb(0,0,0), 0.5))
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlab = "Time", ylab = "NADP")
plot(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlab = "Time", ylab = "S2 Forest")
xl
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha(rgb(0,0,0), 0.5))
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "NADP")
plot(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "S2 Forest")
#Air Temperature Plots
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim =  as.Date(c('2022-09-01 00:00:00', '2023-07-31 00:00:00')),
col = alpha(rgb(0,0,0), 0.5))
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "NADP")
plot(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "S2 Forest")
xl = as.POSIXct(c('2022-09-01 00:00:00', '2023-07-31 00:00:00'))
#Air Temperature Plots
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim =  as.Date(c('2022-09-01 00:00:00', '2023-07-31 00:00:00')),
col = alpha(rgb(0,0,0), 0.5))
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "NADP")
plot(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "S2 Forest")
#Air Temperature Plots
par(mfrow = c(3, 1))
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha(rgb(0,0,0), 0.5))
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "NADP")
plot(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "S2 Forest")
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha(rgb(0,0,0), 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "NADP")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha(rgb(0,0,0), 0.5),
xlim = xl,
xlab = "Time", ylab = "S2 Forest")
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha(rgb(0,0,0), 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha(rgb(0,0,0), 0.5),
label = "NADP")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha(rgb(0,0,0), 0.5),
label = "S2 Forest")
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('blue', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('red', 0.5))
legend('upperright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'))
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('blue', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('red', 0.5))
legend('topright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'))
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('blue', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('red', 0.5))
legend('topright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'),
lty=c(1,NA),lwd=c(2,NA),pch=c(NA,1))
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('blue', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('red', 0.5))
legend('topright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'),
lty=1,lwd=2)
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "South Met",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('blue', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('red', 0.5))
legend('topright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'),
lty=1,lwd=2)
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "Air Temperature [C]",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('blue', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('red', 0.5))
legend('topright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'),
lty=1,lwd=2)
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "Air Temperature [C]",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('blue', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('red', 0.5))
legend('bottomright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'),
lty=1,lwd=2)
plot(x = big_South$TIMESTAMP, y = big_South$RH, type = 'l',
xlab = "Time", ylab = "RH",
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$RH, type = 'l',
col = alpha('red', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$RH, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'),
lty=1,lwd=2)
#Relative Humidity Plots=
plot(x = big_South$TIMESTAMP, y = big_South$RH, type = 'l',
xlab = "Time", ylab = "RH",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$RH, type = 'l',
col = alpha('red', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$RH, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'blue', 'red'),
lty=1,lwd=2)
#Soil Temperature Average
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Soil_TempC, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Soil Temperature [C]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Soil_TempC_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('blue', 'red'),
lty=1,lwd=2)
#Wind Speed
plot(x = big_NADP$TIMESTAMP, y = big_NADP$WindSpd_S_WVT, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Wind Speed [m/s]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$WindSpd_S_WVT, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('blue', 'red'),
lty=1,lwd=2)
#Wind Direction
plot(x = big_NADP$TIMESTAMP, y = big_NADP$WindDir_D1_WVT, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Wind Direction [deg]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$WindDir_D1_WVT, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('blue', 'red'),
lty=1,lwd=2)
library(plotly)
install.packages('plotly')
library(plotly)
plot_ly(type = 'scatterpolar', r = big_NADP$WS_ms_S_WVT, theta = big_NADP$WindDir_D1_WVT,
mode = 'markers', opacity = 0.5, color = big_NADP$RECORD)
plot_ly(type = 'scatterpolar', r = big_S2F$WS_ms_S_WVT, theta = big_S2F$WindDir_D1_WVT,
mode = 'markers', opacity = 0.5, color = big_S2F$RECORD)
#Wind Direction
plot(x = big_NADP$TIMESTAMP, y = big_NADP$WindDir_D1_WVT, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Wind Direction [deg]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$WindDir_D1_WVT, type = 'l',
col = alpha('blue', 0.5))
legend('topright', legend = c("NADP", "S2 Forest"),
col = c('blue', 'red'),
lty=1,lwd=2)
plot(x = big_NADP$TIMESTAMP, y = big_NADP$WindSpd_S_WVT, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Wind Speed [m/s]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$WindSpd_S_WVT, type = 'l',
col = alpha('blue', 0.5))
legend('topright', legend = c("NADP", "S2 Forest"),
col = c('blue', 'red'),
lty=1,lwd=2)
plot(x = big_NADP$TIMESTAMP, y = big_NADP$WindDir_D1_WVT, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Wind Direction [deg]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$WindDir_D1_WVT, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('blue', 'red'),
lty=1,lwd=2)
#PAR Density
plot(x = big_NADP$TIMESTAMP, y = big_NADP$PAR_Den_Avg, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "PAR Density")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$PAR_Den_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('blue', 'red'),
lty=1,lwd=2)
#PAR Density
plot(x = big_NADP$TIMESTAMP, y = big_NADP$PAR_Den_Avg, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "PAR Density")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$PAR_Den_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#Soil Water Content
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Soil_VWC, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Soil Water Content")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Soil_VWC_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#Soil Water Content
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Soil_VWC, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Soil Water Content")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Soil_VWC_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#Soil Temperature
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Soil_TempC, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Soil Temperature [C]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Soil_TempC_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
xl = as.POSIXct(c('2022-09-01 00:00:00', '2023-07-31 00:00:00'))
#Air Temperature Plots
plot(x = big_South$TIMESTAMP, y = big_South$AirT, type = 'l',
xlab = "Time", ylab = "Air Temperature [C]",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$Air_TempC, type = 'l',
col = alpha('red', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Air_TempC_Avg,type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'red', 'blue'),
lty=1,lwd=2)
#Relative Humidity Plots=
plot(x = big_South$TIMESTAMP, y = big_South$RH, type = 'l',
xlab = "Time", ylab = "RH",
xlim = xl,
col = alpha('black', 0.5))
lines(x = big_NADP$TIMESTAMP, y = big_NADP$RH, type = 'l',
col = alpha('red', 0.5))
lines(x = big_S2F$TIMESTAMP, y = big_S2F$RH, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("South", "NADP", "S2 Forest"),
col = c('black', 'red', 'blue'),
lty=1,lwd=2)
#Soil Temperature Average
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Soil_TempC, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Soil Temperature [C]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Soil_TempC_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#Wind Speed
plot(x = big_NADP$TIMESTAMP, y = big_NADP$WindSpd_S_WVT, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Wind Speed [m/s]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$WindSpd_S_WVT, type = 'l',
col = alpha('blue', 0.5))
legend('topright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#Wind Direction
plot(x = big_NADP$TIMESTAMP, y = big_NADP$WindDir_D1_WVT, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Wind Direction [deg]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$WindDir_D1_WVT, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#PAR Density
plot(x = big_NADP$TIMESTAMP, y = big_NADP$PAR_Den_Avg, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "PAR Density")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$PAR_Den_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#Soil Water Content
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Soil_VWC, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Soil Water Content")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Soil_VWC_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
#Soil Temperature
plot(x = big_NADP$TIMESTAMP, y = big_NADP$Soil_TempC, type = 'l',
col = alpha('red', 0.5),
xlim = xl,
xlab = "Time", ylab = "Soil Temperature [C]")
lines(x = big_S2F$TIMESTAMP, y = big_S2F$Soil_TempC_Avg, type = 'l',
col = alpha('blue', 0.5))
legend('bottomright', legend = c("NADP", "S2 Forest"),
col = c('red', 'blue'),
lty=1,lwd=2)
plot(x = big_South$AirT, y = big_S2F$Air_TempC_Avg, type = 'p',
xlab = "Time", ylab = "Air Temperature [C]",
col = alpha('black', 0.5))
write.csv(big_S2F, 'Data and Codes/Cleaned Data/ATM/01_cleanedS2F.csv')
# Export Cleaned Data
write.csv(big_S2F, 'Data and Codes/Cleaned Data/ATM/01_cleanedS2F.csv')
write.csv(big_South, 'Data and Codes/Cleaned Data/ATM/01_cleanedSouthMet.csv')
write.csv(big_NADP, 'Data and Codes/Cleaned Data/ATM/01_cleanedNADP.csv')
