library(FactoMineR)
library(factoextra)
#Correlation Matrix
corrMatrix_all = cor(allNormalizedData)
ggcorrplot(corrMatrix_all)
#Correlation Matrix
corrMatrix_all = cor(allNormalizedData)
ggcorrplot(corrMatrix_all)
#Apply PCA
data.pca.all = princomp(corrMatrix_all)
summary(data.pca.all)
#Scree plot
fviz_eig(data.pca.all, addlabels = TRUE)
fviz_pca_var(data.pca.all, col.var = "black")
fviz_pca_var(data.pca.all, col.var = "cos2",
gradient.cols = c("blue", "green"),
repel = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(astsa)
library(dplyr)
library(tidyverse)
library(ggpomological)
library(extrafont)
library(ggpattern)
forestInv = readxl::read_excel('./Cleaned Data/S2overstory_2023_compiled.xlsx',
na = c('NAN'))
head(forestInv)
unique(forestInv$SPECIES)
#Sort into peatland zones
forestInv = forestInv %>%
mutate(Zone = ifelse(SITE %in% c('S213', 'S221', 'S222', 'S223', 'S233', 'S234'), "Bog",
ifelse(SITE %in% c('S211', 'S212', 'S224', 'S225', 'S232', 'S235'),
"Lagg", "Upland")))
forestInv = na.omit(forestInv)
#Create Indicator column for deciduous/coniferous
forestInv = forestInv %>%
mutate(Conif = ifelse(SPECIES %in% c('Abies balsamea', 'Picea mariana', 'Larix laricina'), 'Coniferous', 'Deciduous'))
head(forestInv)
ggplot(data = forestInv, aes(x = SPECIES, fill = Zone)) +
geom_histogram(stat = "count", position = "stack") +
guides(x =  guide_axis(angle = -45)) +
scale_fill_pomological() +
labs(x = " ", y = "Counts",
title = "Species Abundance by Peatland Zone",
subtitle = "Highest diversity in the uplands with Black Spruce dominating the bog.") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
ggplot(data = na.omit(forestInv), aes(x = DBH_CM, fill = Conif)) +
geom_histogram() +
facet_grid(cols = vars(Zone),
rows = vars(factor(CC, levels = c("Dom", "Co", "Int", "Sup")))) +
labs(x = " ", y = "Counts",
title = "Tree Width by Peatland Zone",
subtitle = "High number of small trees in bog versus fewer but more variable tree widths in uplands.") +
scale_fill_manual(values = c("#234d20", "#77ab59")) +
theme(strip.background = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#Summarize the data by species and locations
forestInv_sum = forestInv %>%
count(NORTHING, EASTING, SPECIES, sort = TRUE)
head(forestInv_sum)
#Species abundance
ggplot(data = forestInv_sum, aes(x = NORTHING, y = EASTING, size = n)) +
geom_point(shape = 1, color = 'Red') +
xlim(c(min(forestInv_sum$NORTHING) - 50, max(forestInv_sum$NORTHING) + 50)) +
ylim(c(min(forestInv_sum$EASTING) - 50, max(forestInv_sum$EASTING) + 50)) +
facet_wrap("SPECIES") +
guides(x =  guide_axis(angle = -45), size = guide_legend(title = "Species Count")) +
labs(x = "Northing", y = "Easting",
title = "Spatial Distribution of Tree Species in S2") +
theme(strip.background = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#Bin Easting and Northing data for plotting in "map like" layout
forestInv$eastingBin = floor(ave(forestInv$EASTING,
cut(forestInv$EASTING,
breaks = c(min(forestInv$EASTING)-10, 5262500, 5262450, 5262400, 5262350, 5262250, max(forestInv$EASTING)+10)),
FUN = mean))
forestInv$eastingBin_f = factor(forestInv$eastingBin, levels = c(5262531, 5262487, 5262424, 5262363, 5262309,5262240))
forestInv$northingBin = floor(ave(forestInv$NORTHING,
cut(forestInv$NORTHING,
breaks = 7),
FUN = mean))
forestInv
#DBH distribution
ggplot(data = forestInv, aes(x = DBH_CM, color = Zone, fill = Zone)) +
geom_density() +
facet_grid(rows = vars(eastingBin_f), cols = vars(northingBin)) +
scale_color_pomological() +
scale_fill_pomological() +
labs(x = "Distance from Plot Center (m)",
y = "Frequency",
title = "Diameter at Breast Height Distributions in S2",
subtitle = "Diversity of tree width is higher in the upland regions than in the bog.") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#DBH distribution
ggplot(data = forestInv, aes(x = DIST_M, color = Zone, fill = Zone)) +
geom_density() +
facet_grid(rows = vars(eastingBin_f), cols = vars(northingBin)) +
scale_color_pomological() +
scale_fill_pomological() +
labs(x = "Distance from Plot Center (m)", y  = "Frequency",
title = "Distance from Plot Center Distribution in S2",
subtitle = "Higher numbers of trees on the south facing slope skew visual results") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#Summarize the data by species and locations
forestInv_binsum = forestInv %>%
count(northingBin, eastingBin, SPECIES, sort = TRUE)
head(forestInv_binsum)
#Species distribution
ggplot(data = forestInv, aes(x = "", y = SPECIES, fill = SPECIES)) +
geom_bar(stat = 'identity', width = 1) +
coord_polar("y", start=0) +
facet_grid(rows = vars(eastingBin_f), cols = vars(northingBin)) +
labs(x = "Species of Tree",
y = "Frequency",
title = "Distribution of Tree Species in S2",
subtitle = " ") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
axis.text = element_blank(),
plot.title=element_text(face="bold", size=20)
)
## Import melted csv with snow data
snowS2 = read.csv("./Cleaned Data/01_cleanedsnowdataS2.csv")
snowS6 = read.csv("./Cleaned Data/01_cleanedsnowdataS6.csv")
snow = rbind(snowS2, snowS6)
head(snow)
#Groupby snow data to average over time
snow_avg = snow %>%
group_by(stakes) %>%
summarise(avg_depths = mean(depths))
#Group forest data by stake to average across plot
forestInv_avg = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('D'), mean))
forestInv_sum = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('D'), sum))
forestInv_counts = forestInv %>%
count(SITE, sort = TRUE)
forestInv_cc = forestInv %>%
count(SITE, CC) %>%
pivot_wider(names_from = "CC", values_from = "n", values_fill = 0)
forestInv_prop = forestInv %>%
group_by(SITE, Conif) %>%
summarise(n = n()) %>%
mutate(prop = n/sum(n)) %>%
pivot_wider(names_from = "Conif", values_from = c("prop", "n"), values_fill = 0)
#Merge forest data together
merged_forest = merge(forestInv_avg, forestInv_counts, by = "SITE")
merged_forest = merge(merged_forest, forestInv_cc, by = "SITE")
merged_forest = merge(merged_forest, forestInv_prop[c("SITE", "prop_Deciduous", "prop_Coniferous")], by = "SITE")
head(merged_forest)
#Merge forest data with snow data
merged_data = merge(merged_forest, snow_avg, by.x = 'SITE', by.y = 'stakes')
head(merged_data)
ggplot(data = merged_data, aes(x = DBH_CM, y = avg_depths, color = prop_Deciduous)) +
geom_point(size = 4) +
labs(x = "DBH (cm)",
y = "Average winter snow depth (m)",
title = "Snow Depth Based on Forest Parameters",
subtitle = " ") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#Create Indicator column for deciduous/coniferous
forestInv = forestInv %>%
mutate(Conif = ifelse(SPECIES %in% c('Abies balsamea', 'Picea mariana', 'Larix laricina'), 'Coniferous', 'Deciduous'))
#Calculate Basal Area
forestInv = forestInv %>%
mutate(basalArea_m2 = (3.1415 * (DBH_CM/2)^2)/1000)
head(forestInv)
ggplot(data = forestInv, aes(x = SPECIES, fill = Zone)) +
geom_histogram(stat = "count", position = "stack") +
guides(x =  guide_axis(angle = -45)) +
scale_fill_pomological() +
labs(x = " ", y = "Counts",
title = "Species Abundance by Peatland Zone",
subtitle = "Highest diversity in the uplands with Black Spruce dominating the bog.") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
ggplot(data = na.omit(forestInv), aes(x = DBH_CM, fill = Conif)) +
geom_histogram() +
facet_grid(cols = vars(Zone),
rows = vars(factor(CC, levels = c("Dom", "Co", "Int", "Sup")))) +
labs(x = " ", y = "Counts",
title = "Tree Width by Peatland Zone",
subtitle = "High number of small trees in bog versus fewer but more variable tree widths in uplands.") +
scale_fill_manual(values = c("#234d20", "#77ab59")) +
theme(strip.background = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
ggplot(data = na.omit(forestInv), aes(x = DBH_CM, fill = Conif)) +
geom_histogram() +
facet_grid(cols = vars(Zone),
rows = vars(factor(CC, levels = c("Dom", "Co", "Int", "Sup")))) +
labs(x = "Diameter at Breast Height [cm]", y = "Counts",
title = "Tree Width by Peatland Zone",
subtitle = "High number of small trees in bog versus fewer but more variable tree widths in uplands.") +
scale_fill_manual(values = c("#234d20", "#77ab59")) +
theme(strip.background = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#Summarize the data by species and locations
forestInv_sum = forestInv %>%
count(NORTHING, EASTING, SPECIES, sort = TRUE)
head(forestInv_sum)
#Species abundance
ggplot(data = forestInv_sum, aes(x = NORTHING, y = EASTING, size = n)) +
geom_point(shape = 1, color = 'Red') +
xlim(c(min(forestInv_sum$NORTHING) - 50, max(forestInv_sum$NORTHING) + 50)) +
ylim(c(min(forestInv_sum$EASTING) - 50, max(forestInv_sum$EASTING) + 50)) +
facet_wrap("SPECIES") +
guides(x =  guide_axis(angle = -45), size = guide_legend(title = "Species Count")) +
labs(x = "Northing", y = "Easting",
title = "Spatial Distribution of Tree Species in S2") +
theme(strip.background = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#Bin Easting and Northing data for plotting in "map like" layout
forestInv$eastingBin = floor(ave(forestInv$EASTING,
cut(forestInv$EASTING,
breaks = c(min(forestInv$EASTING)-10, 5262500, 5262450, 5262400, 5262350, 5262250, max(forestInv$EASTING)+10)),
FUN = mean))
forestInv$eastingBin_f = factor(forestInv$eastingBin, levels = c(5262531, 5262487, 5262424, 5262363, 5262309,5262240))
forestInv$northingBin = floor(ave(forestInv$NORTHING,
cut(forestInv$NORTHING,
breaks = 7),
FUN = mean))
forestInv
#DBH distribution
ggplot(data = forestInv, aes(x = DBH_CM, color = Zone, fill = Zone)) +
geom_density() +
facet_grid(rows = vars(eastingBin_f), cols = vars(northingBin)) +
scale_color_pomological() +
scale_fill_pomological() +
labs(x = "Distance from Plot Center (m)",
y = "Frequency",
title = "Diameter at Breast Height Distributions in S2",
subtitle = "Diversity of tree width is higher in the upland regions than in the bog.") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#DBH distribution
ggplot(data = forestInv, aes(x = DBH_CM, color = Zone, fill = Zone)) +
geom_density() +
facet_grid(rows = vars(eastingBin_f), cols = vars(northingBin)) +
scale_color_pomological() +
scale_fill_pomological() +
labs(x = "Diameter at Breast Height (cm)",
y = "Frequency",
title = "Diameter at Breast Height Distributions in S2",
subtitle = "Diversity of tree width is higher in the upland regions than in the bog.") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#DBH distribution
ggplot(data = forestInv, aes(x = DIST_M, color = Zone, fill = Zone)) +
geom_density() +
facet_grid(rows = vars(eastingBin_f), cols = vars(northingBin)) +
scale_color_pomological() +
scale_fill_pomological() +
labs(x = "Distance from Plot Center (m)", y  = "Frequency",
title = "Distance from Plot Center Distribution in S2",
subtitle = "Higher numbers of trees on the south facing slope skew visual results") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
#Summarize the data by species and locations
forestInv_binsum = forestInv %>%
count(northingBin, eastingBin, SPECIES, sort = TRUE)
head(forestInv_binsum)
#Species distribution
ggplot(data = forestInv, aes(x = "", y = SPECIES, fill = SPECIES)) +
geom_bar(stat = 'identity', width = 1) +
coord_polar("y", start=0) +
facet_grid(rows = vars(eastingBin_f), cols = vars(northingBin)) +
labs(x = "Species of Tree",
y = "Frequency",
title = "Distribution of Tree Species in S2",
subtitle = " ") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
axis.text = element_blank(),
plot.title=element_text(face="bold", size=20)
)
## Import melted csv with snow data
snowS2 = read.csv("./Cleaned Data/01_cleanedsnowdataS2.csv")
snowS6 = read.csv("./Cleaned Data/01_cleanedsnowdataS6.csv")
snow = rbind(snowS2, snowS6)
head(snow)
#Groupby snow data to average over time
snow_avg = snow %>%
group_by(stakes) %>%
summarise(avg_depths = mean(depths))
#Group forest data by stake to average across plot
forestInv_avg = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('D'), mean))
forestInv_avg_basal = forestInv %>%
group_by(SITE) %>%
summarise(basalArea_m2, mean))
#Group forest data by stake to average across plot
forestInv_avg = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('D'), mean))
forestInv_avg_basal = forestInv %>%
group_by(SITE) %>%
summarise(basalArea_m2, mean)
#Group forest data by stake to average across plot
forestInv_avg = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('D'), mean))
#Group forest data by stake to take totals across plot
forestInv_sum = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('D'), sum))
forestInv_counts = forestInv %>%
count(SITE, sort = TRUE)
forestInv_cc = forestInv %>%
count(SITE, CC) %>%
pivot_wider(names_from = "CC", values_from = "n", values_fill = 0)
forestInv_prop = forestInv %>%
group_by(SITE, Conif) %>%
summarise(n = n()) %>%
mutate(prop = n/sum(n)) %>%
pivot_wider(names_from = "Conif", values_from = c("prop", "n"), values_fill = 0)
#Merge forest data together
merged_forest = merge(forestInv_avg, forestInv_counts, by = "SITE")
merged_forest = merge(merged_forest, forestInv_cc, by = "SITE")
merged_forest = merge(merged_forest, forestInv_prop[c("SITE", "prop_Deciduous", "prop_Coniferous")], by = "SITE")
head(merged_forest)
#Group forest data by stake to average across plot
forestInv_avg = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('D'), mean))
#Group forest data by stake to take totals across plot
forestInv_basal = forestInv %>%
group_by(SITE) %>%
summarise(across(starts_with('basal'), sum))
forestInv_counts = forestInv %>%
count(SITE, sort = TRUE)
forestInv_cc = forestInv %>%
count(SITE, CC) %>%
pivot_wider(names_from = "CC", values_from = "n", values_fill = 0)
forestInv_prop = forestInv %>%
group_by(SITE, Conif) %>%
summarise(n = n()) %>%
mutate(prop = n/sum(n)) %>%
pivot_wider(names_from = "Conif", values_from = c("prop", "n"), values_fill = 0)
#Merge forest data together
merged_forest = merge(forestInv_avg, forestInv_counts, by = "SITE")
merged_forest = merge(merged_forest, forestInv_basal, by "SITE")
#Merge forest data together
merged_forest = merge(forestInv_avg, forestInv_counts, by = "SITE")
merged_forest = merge(merged_forest, forestInv_basal, by = "SITE")
merged_forest = merge(merged_forest, forestInv_cc, by = "SITE")
merged_forest = merge(merged_forest, forestInv_prop[c("SITE", "prop_Deciduous", "prop_Coniferous")], by = "SITE")
head(merged_forest)
#Merge forest data with snow data
merged_data = merge(merged_forest, snow_avg, by.x = 'SITE', by.y = 'stakes')
head(merged_data)
ggplot(data = merged_data, aes(x = DBH_CM, y = avg_depths, color = prop_Deciduous)) +
geom_point(size = 4) +
labs(x = "DBH (cm)",
y = "Average winter snow depth (m)",
title = "Snow Depth Based on Forest Parameters",
subtitle = " ") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
ggplot(data = merged_data, aes(x = DBH_CM, y = avg_depths, color = prop_Deciduous)) +
geom_point(size = 4) +
labs(x = "Average Site DBH (cm)",
y = "Average winter snow depth (m)",
title = "Snow Depth Based on Forest Parameters",
subtitle = " ") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
ggplot() +
geom_point(aes(data = merged_data, x = basalArea_m2, y = avg_depths,
color = prop_Deciduous),
size = 4) +
labs(x = "Total Plot DBH (cm)",
y = "Average winter snow depth (m)",
title = "Snow Depth from Plot DBH",
subtitle = " ",
color = "Proportion Dec") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
ggplot(data = merged_data, aes(x = DBH_CM, y = avg_depths, color = prop_Deciduous)) +
geom_point(size = 4) +
labs(x = "Average Site DBH (cm)",
y = "Average winter snow depth (m)",
title = "Snow Depth Based on Forest Parameters",
subtitle = " ") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
ggplot() +
geom_point(data = merged_data, aes(x = basalArea_m2, y = avg_depths,
color = prop_Deciduous),
size = 4) +
labs(x = "Total Plot DBH (cm)",
y = "Average winter snow depth (m)",
title = "Snow Depth from Plot DBH",
subtitle = " ",
color = "Proportion Dec") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'grey92'),
plot.title=element_text(face="bold", size=20)
)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
#Normalize the data
#Take out the columns that are duplicates/linear combinations and strings
numericalData = merged_data[,2:12] %>%
select(-c("DIST_FT", "DBH_IN", "prop_Coniferous"))
#Normalize the data
#Take out the columns that are duplicates/linear combinations and strings
numericalData = merged_data[,2:13] %>%
select(-c("DIST_FT", "DBH_IN", "prop_Coniferous"))
normalizedData = scale(numericalData)
head(normalizedData)
#Correlation Matrix
corrMatrix = cor(normalizedData)
ggcorrplot(corrMatrix)
#Apply PCA
data.pca = princomp(corrMatrix)
summary(data.pca)
#Scree plot
fviz_eig(data.pca, addlabels = TRUE)
fviz_pca_var(data.pca, col.var = "black")
fviz_cos2(data.pca, choice = "var", axes = 1:2)
fviz_pca_var(data.pca, col.var = "cos2",
gradient.cols = c("blue", "green"),
repel = TRUE)
#Set Site as index
rownames(merged_data) = merged_data$SITE
#Model
mod1 = lm("avg_depths ~ (DBH_CM + Co +Dom)*prop_Deciduous", data = merged_data)
summary(mod1)
plot(mod1)
setwd("D:/1_DesktopBackup/Feng Research/0_MEF Snow Hydology/mef-snowhydro/Data and Codes")
